# Will use this workflow to build docker image and deploy to production
name: Deploy to production

on:
  push:
  # Only trigger when there is a push on to main branch
    branches: [ "main" ]

# Can be assigned at the job or workflow level
permissions:
  # id-token: write - allows the JWT to be requested from GitHub's OIDC provider
  id-token: write
  # contents: read - required for actions/checkout
  contents: read 

jobs:

  build:
    name: Build image
    # Github hosted runner
    runs-on: ubuntu-latest
       
    steps: 
    
    - name: Check out code 
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::787608098916:role/GitHub_Actions_Role
        aws-region: us-east-1
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        # Registry is pulled from the login-ecr step above
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        # ECR repository name that we defined 
        REPOSITORY: simplebank
        # Using the GitHub SHA of the commit to tag the docker image
        IMAGE_TAG: ${{ github.sha }}
      # Build the docker image locally and then push to AWS
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG . 
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
